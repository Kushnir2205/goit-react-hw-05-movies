{"version":3,"file":"static/js/529.2e181102.chunk.js","mappings":"mOACA,EAA4B,+BAA5B,EAAmE,2BAAnE,EAAuG,4B,SC+BvG,EA3BoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACrB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBACEC,KAAK,OACLC,MAAOL,EACPM,SAboB,SAAAC,GACxBN,EAASM,EAAMC,OAAOH,MACvB,EAYKI,YAAY,gBACZP,UAAWC,KAEb,mBAAQD,UAAWC,EAAYC,KAAK,SAASM,QAb5B,WACnBZ,EAASE,EACV,EAWG,sBAKL,ECsBD,EA5Ce,WACb,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeC,EAAf,KACA,GAAkCb,EAAAA,EAAAA,WAAS,GAA3C,eAAOc,EAAP,KAAkBC,EAAlB,KAEA,GAAsCC,EAAAA,EAAAA,IAAgB,IAAtD,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,YAAW,WACtBJ,EAAYK,IAAI,UAClBP,GAAa,IACbQ,EAAAA,EAAAA,IAAaN,EAAYO,IAAI,UAC1BC,MAAK,SAAAC,GAAI,OAAIb,EAAUa,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,kBAAMjB,GAAa,EAAnB,KAEXF,EAAU,GAEb,GAAE,KAEH,OAAO,kBAAMoB,aAAab,EAAnB,CACR,GAAE,CAACH,IAYJ,OACE,4BACE,SAAC,EAAD,CAAalB,SAZI,SAAAE,GACfA,GACFgB,EAAYiB,IAAI,QAASjC,GACzBiB,EAAeD,KAEfA,EAAYkB,OAAO,SACnBjB,EAAeD,GAElB,IAKIH,GACC,sCAEAF,GAAUA,EAAOwB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYzB,OAAQA,MAI1D,C","sources":["webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movie/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SearchMovie_container__FZySO\",\"input\":\"SearchMovie_input__3IbmL\",\"button\":\"SearchMovie_button__-yGEO\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport css from './SearchMovie.module.css';\n\nconst SearchMovie = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSearch = () => {\n    onSearch(query);\n  };\n\n  return (\n    <div className={css.container}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        placeholder=\"Search movies\"\n        className={css.input}\n      />\n      <button className={css.button} type=\"submit\" onClick={handleSearch}>\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchMovie;\nSearchMovie.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/serviceApi';\nimport ListMovies from 'components/ListMovies/ListMovies';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\n\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [queryParams, setQueryParams] = useSearchParams('');\n\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      if (queryParams.has('query')) {\n        setIsLoading(true);\n        searchMovies(queryParams.get('query'))\n          .then(data => setMovies(data.results))\n          .catch(error => console.log(error))\n          .finally(() => setIsLoading(false));\n      } else {\n        setMovies([]);\n      }\n    }, 500);\n\n    return () => clearTimeout(debounce);\n  }, [queryParams]);\n\n  const handleSearch = query => {\n    if (query) {\n      queryParams.set('query', query);\n      setQueryParams(queryParams);\n    } else {\n      queryParams.delete('query');\n      setQueryParams(queryParams);\n    }\n  };\n\n  return (\n    <div>\n      <SearchMovie onSearch={handleSearch} />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        movies && movies.length > 0 && <ListMovies movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n"],"names":["onSearch","useState","query","setQuery","className","css","type","value","onChange","event","target","placeholder","onClick","movies","setMovies","isLoading","setIsLoading","useSearchParams","queryParams","setQueryParams","useEffect","debounce","setTimeout","has","searchMovies","get","then","data","results","catch","error","console","log","finally","clearTimeout","set","delete","length","ListMovies"],"sourceRoot":""}